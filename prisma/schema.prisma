// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int                @id @default(autoincrement())
  telegramId        BigInt             @unique
  username          String?            @unique
  firstName         String?
  lastName          String?
  isBanned          Boolean            @default(false)
  registeredAt      DateTime           @default(now())
  admin             Admin?
  subscriptions     Subscription[]
  userLimits        UserLimits?
  phoneNumbers      PhoneNumber[]
  CampaignParsing   CampaignParsing[]
  campaignMailings  CampaignMailing[]
  bitrixIntegration BitrixIntegration?
  amoCrmIntegration AmoCrmIntegration?
  leads             Lead[]
  leadsDBs          LeadsDB[]
  openaiApiKey      String?
}

model Admin {
  id      Int      @id @default(autoincrement())
  user    User     @relation(fields: [userId], references: [id])
  userId  Int      @unique
  addedAt DateTime @default(now())
}

model Subscription {
  id           Int      @id @default(autoincrement())
  user         User     @relation(fields: [userId], references: [id])
  userId       Int
  startDate    DateTime
  endDate      DateTime
  isRepeating  Boolean  @default(false)
  durationDays Int?
}

model UserLimits {
  id             Int  @id @default(autoincrement())
  user           User @relation(fields: [userId], references: [id])
  userId         Int  @unique
  parsingLimit   Int?
  phonesLimit    Int?
  campaignsLimit Int?
  contactsLimit  Int?
  leadsLimit     Int?
}

model PhoneNumber {
  id                Int              @id @default(autoincrement())
  phoneNumber       String           @unique
  user              User?            @relation(fields: [userId], references: [id])
  userId            Int?
  banType           String?
  maxInactivityTime Int              @default(3600)
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  telegramAccount   TelegramAccount?
  whatsappAccount   WhatsappAccount?
  WABAAccount       WABAAccount?
  banStatus         String?
  banExpiresAt      DateTime?
}

model TelegramAccount {
  id                   Int         @id @default(autoincrement())
  phoneNumber          PhoneNumber @relation(fields: [phoneNumberId], references: [id])
  phoneNumberId        Int         @unique
  isPremium            Boolean     @default(false)
  isAuthenticated      Boolean     @default(false)
  isBanned             Boolean     @default(false)
  contactsReachedToday Int         @default(0)
  contactsReachedTotal Int         @default(0)
  dailyLimit           Int         @default(40)
  totalLimit           Int         @default(40)
  messagesSentToday    Int         @default(0)
  messagesSentTotal    Int         @default(0)
}

model WhatsappAccount {
  id                   Int         @id @default(autoincrement())
  phoneNumber          PhoneNumber @relation(fields: [phoneNumberId], references: [id])
  phoneNumberId        Int         @unique
  isAuthenticated      Boolean     @default(false)
  accountType          String      @default("regular")
  contactsReachedToday Int         @default(0)
  contactsReachedTotal Int         @default(0)
  dailyLimit           Int         @default(100)
  totalLimit           Int         @default(100)
  messagesSentToday    Int         @default(0)
  messagesSentTotal    Int         @default(0)
}

model WABAAccount {
  id                   Int         @id @default(autoincrement())
  phoneNumber          PhoneNumber @relation(fields: [phoneNumberId], references: [id])
  phoneNumberId        Int         @unique
  isAuthenticated      Boolean     @default(false)
  businessProfileId    String?
  contactsReachedToday Int         @default(0)
  contactsReachedTotal Int         @default(0)
  dailyLimit           Int         @default(1000)
  totalLimit           Int         @default(1000)
  messagesSentToday    Int         @default(0)
  messagesSentTotal    Int         @default(0)
  accessToken          String?
  refreshToken         String?
  tokenExpiresAt       DateTime?
}

model WABASession {
  id          Int      @id @default(autoincrement())
  phoneNumber String   @unique
  session     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model CampaignParsing {
  id                  Int          @id @default(autoincrement())
  user                User         @relation(fields: [userId], references: [id])
  userId              Int
  name                String
  groups              String
  audienceDescription String?
  status              String?
  maxUsers            Int?
  depth               Int?
  totalParsed         Int          @default(0)
  processedCount      Int          @default(0)
  isFullyProcessed    Boolean      @default(false)
  lastParsedAt        DateTime?
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt
  parsedUsers         ParsedUser[]
}

model ParsedUser {
  id               Int             @id @default(autoincrement())
  campaign         CampaignParsing @relation(fields: [campaignId], references: [id])
  campaignId       Int
  groupUsername    String?
  groupLink        String?
  userId           BigInt
  username         String?
  firstName        String?
  lastName         String?
  bio              String?
  category         String?
  parsedAt         DateTime        @default(now())
  lastSeen         DateTime?
  hasChannel       Boolean         @default(false)
  isProcessed      Boolean         @default(false)
  processingStatus String?
}

model PhoneNumberContact {
  id          Int      @id @default(autoincrement())
  phoneNumber String
  userId      String
  createdAt   DateTime @default(now())

  @@unique([phoneNumber, userId])
}

model MessageStat {
  id          Int      @id @default(autoincrement())
  userId      BigInt
  phoneNumber String
  tokensUsed  Int
  timestamp   DateTime @default(now())
}

model Lead {
  id                Int                @id @default(autoincrement())
  bitrixId          String?            @unique
  leadsDBId         Int
  leadsDB           LeadsDB            @relation(fields: [leadsDBId], references: [id])
  campaignId        Int?
  userId            Int?
  phone             String?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  campaign          CampaignMailing?   @relation(fields: [campaignId], references: [id])
  user              User?              @relation(fields: [userId], references: [id])
  status            LeadStatus         @default(NEW)
  dialog            Dialog?            @relation(fields: [dialogId], references: [id])
  telegramChatId    String?
  whatsappChatId    String?
  lastMessageTime   DateTime?
  lastPlatform      String?
  conversationState ConversationState?
  dialogId          Int?
  profile           LeadProfile?
  messageQueue      MessageQueue[]

  @@index([campaignId])
  @@index([userId])
  @@index([phone])
  @@index([telegramChatId])
  @@index([whatsappChatId])
}

model LeadProfile {
  id                 Int      @id @default(autoincrement())
  lead               Lead     @relation(fields: [leadId], references: [id])
  leadId             Int      @unique
  name               String?
  status             String?
  address            String?
  source             String?
  businessType       String?
  leadGenerationMethod String?
  mainPains          String?
  location           String?
  interests          String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

enum LeadStatus {
  NEW
  SENT_MESSAGE
  STARTED_CONVERSATION
  UNAVAILABLE
  PROCESSED_NEGATIVE
  PROCESSED_POSITIVE
}

model LeadsDB {
  id        Int               @id @default(autoincrement())
  name      String
  userId    Int
  user      User              @relation(fields: [userId], references: [id])
  leads     Lead[]
  campaigns CampaignLeadsDB[]
  isDefault Boolean           @default(false)
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
}

model CampaignLeadsDB {
  id         Int             @id @default(autoincrement())
  campaignId Int
  leadsDBId  Int
  campaign   CampaignMailing @relation(fields: [campaignId], references: [id])
  leadsDB    LeadsDB         @relation(fields: [leadsDBId], references: [id])
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt

  @@unique([campaignId, leadsDBId])
}

model CampaignMailing {
  id                      Int                   @id @default(autoincrement())
  name                    String                @unique
  message                 String?
  isActive                Boolean               @default(false)
  createdAt               DateTime              @default(now())
  updatedAt               DateTime              @updatedAt
  platformPriority        String                @default("telegram")
  user                    User                  @relation(fields: [userId], references: [id])
  userId                  Int
  phoneNumbers            PhoneNumberCampaign[]
  prompt                  Prompt?               @relation("PrimaryPrompt", fields: [promptId], references: [id])
  promptId                Int?
  leads                   Lead[]
  leadsDBs                CampaignLeadsDB[]
  googleSheetUrl          String?
  notificationTelegramIds BigInt[]
  defaultPhoneNumber      String?
  secondaryPrompt         Prompt?               @relation("SecondaryPrompt", fields: [secondaryPromptId], references: [id])
  secondaryPromptId       Int?
  isSecondaryAgentActive  Boolean               @default(false)
  modelName               String                @default("gpt-4o-mini")
  openaiApiKey            String?
  knowledgeBases          KnowledgeBase[]    
  maxKnowledgeBlocks      Int                   @default(5)
}

model ConversationState {
  id           Int      @id @default(autoincrement())
  leadId       Int      @unique
  lead         Lead     @relation(fields: [leadId], references: [id])
  summary      String
  lastMessage  String
  pendingReply Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model PhoneNumberCampaign {
  id          Int             @id @default(autoincrement())
  phoneNumber String
  platform    String
  campaign    CampaignMailing @relation(fields: [campaignId], references: [id])
  campaignId  Int
  addedAt     DateTime        @default(now())

  @@unique([phoneNumber, campaignId])
}

model BitrixIntegration {
  id                  Int     @id @default(autoincrement())
  user                User    @relation(fields: [userId], references: [telegramId])
  userId              BigInt  @unique
  bitrixInboundUrl    String?
  bitrixOutboundToken String?
}

model AmoCrmIntegration {
  id                  Int     @id @default(autoincrement())
  user                User    @relation(fields: [userId], references: [telegramId])
  userId              BigInt  @unique
  amoCrmInboundUrl    String?
  amoCrmOutboundToken String?
}

model TelegramSession {
  id          Int      @id @default(autoincrement())
  phoneNumber String   @unique
  session     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model WhatsappSession {
  id          Int      @id @default(autoincrement())
  phoneNumber String   @unique
  session     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Dialog {
  id           Int       @id @default(autoincrement())
  leadId       Int       @unique 
  userId       Int
  contactId    String
  contactPhone String?
  platform     String
  messages     Message[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  Lead         Lead[]

  @@unique([userId, contactId, platform])
}

model Message {
  id                Int      @id @default(autoincrement())
  dialog            Dialog   @relation(fields: [dialogId], references: [id])
  dialogId          Int
  userRequest       String
  assistantResponse String?
  status            String
  createdAt         DateTime @default(now())
}

model Prompt {
  id                 Int               @id @default(autoincrement())
  name               String            @unique
  content            String
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
  primaryCampaigns   CampaignMailing[] @relation("PrimaryPrompt")
  secondaryCampaigns CampaignMailing[] @relation("SecondaryPrompt")
}

model MessageQueue {
  id                   Int      @id @default(autoincrement())
  leadId               Int?
  lead                 Lead?    @relation(fields: [leadId], references: [id])
  campaignId           Int
  message              String
  recipientPhoneNumber String?
  senderPhoneNumber    String
  platform             String
  status               String
  errorMessage         String?
  result               Json?
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  additionalData       Json?
  retryCount           Int      @default(0)

  @@index([status])
  @@index([createdAt])
}

model KnowledgeBase {
  id          Int             @id @default(autoincrement())
  name        String
  description String?
  pineconeId  String          @unique
  campaign    CampaignMailing @relation(fields: [campaignId], references: [id])
  campaignId  Int
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

model PhoneNumberRotation {
  id          Int      @id @default(autoincrement())
  userId      BigInt
  campaignId  Int
  platform    String
  currentIndex Int     @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([userId, campaignId, platform])
}
